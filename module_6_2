
class Vehicle:
	"""список цветов для авто"""
	__COLOR_VARIANTS = ['black', 'white', 'red', 'blue', 'green', 'yellow', 'orange', 'grey', 'brown', 'pink', 'purple', 'silver', 'golden', 'olive',
					  'lemon', 'ivory', 'khaki', 'mustard', 'beige', 'peach', 'champagne', 'amber', 'salmon', 'rust', 'navy', 'azure',
					  'powder_blue', 'turquoise', 'emerald', 'sea_foam', 'mint', 'charcoal', 'ash_grey', 'auburn', 'chocolate', 'copper',
					  'fuchsia', 'lilac', 'mauve', 'coral', 'plum, crimson',' maroon', 'scarlet', 'ruby', 'cherry', 'raspberry', 'indigo',
					  'mahogany', 'lavender']
	"""водитель, модель ТС, цвет авто, мощность ДВС """
	def __init__(self,owner, __model, __color, __angine_power):
		self.owner = owner
		self.__model = str(__model)
		self.__angine_power = int(__angine_power)
		self.__color = str(__color)

	def get_model(self):
		return f"Модель: {self.__model}"

	def get_horsepower(self):
		return f"мощность ДВС : {self.__angine_power}"

	def get_color(self):
		return f"цвет ТС : {self.__color}"

	def print_info(self):
		print(f' {self.get_model()},\n {self.get_horsepower()},\n {self.get_color()},\n Владелец: {self.owner}')
	"""ели цвет есть в списке, тогда перекрашиваем"""
	def set_color(self, new_color):
		self.new_color = str(new_color)
		if self.new_color.lower() in Vehicle.__COLOR_VARIANTS:
			self.color = self.new_color
			print('Перекрасили в', new_color)
		else:
			print("Нельзя сменить цвет на ", new_color)



class Sedan(Vehicle):
	__PASSENGERS_LIMIT = 5

		
		



# Текущие цвета __COLOR_VARIANTS = ['blue', 'red', 'green', 'black', 'white']
vehicle1 = Sedan('Fedos', 'Toyota Mark II', 'blue', 500)

# Изначальные свойства
vehicle1.print_info()

# Меняем свойства (в т.ч. вызывая методы)
vehicle1.set_color('PaNK')
vehicle1.set_color('BLaCK')
vehicle1.owner = 'Vasyok'

# Проверяем что поменялось
vehicle1.print_info()